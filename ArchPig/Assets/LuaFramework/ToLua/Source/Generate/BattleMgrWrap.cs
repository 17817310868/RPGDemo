//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BattleMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BattleMgr), typeof(Manager));
		L.RegFunction("InitBattle", InitBattle);
		L.RegFunction("ShowBattleAnim", ShowBattleAnim);
		L.RegFunction("UpdateInfo", UpdateInfo);
		L.RegFunction("HurtAnim", HurtAnim);
		L.RegFunction("NewRound", NewRound);
		L.RegFunction("BattleEnd", BattleEnd);
		L.RegFunction("UpdateStaticBuff", UpdateStaticBuff);
		L.RegFunction("UpdateActionBuff", UpdateActionBuff);
		L.RegFunction("GetAllBuffs", GetAllBuffs);
		L.RegFunction("GetBattlerPosToUI", GetBattlerPosToUI);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("time", get_time, set_time);
		L.RegVar("isTiming", get_isTiming, set_isTiming);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			S2C_InitBattlers arg0 = (S2C_InitBattlers)ToLua.CheckObject<S2C_InitBattlers>(L, 2);
			obj.InitBattle(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowBattleAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			System.Collections.Generic.List<S2C_BattleMessage> arg0 = (System.Collections.Generic.List<S2C_BattleMessage>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<S2C_BattleMessage>));
			obj.ShowBattleAnim(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			Battler arg0 = (Battler)ToLua.CheckObject<Battler>(L, 2);
			obj.UpdateInfo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HurtAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			Battler arg0 = (Battler)ToLua.CheckObject<Battler>(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.HurtAnim(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NewRound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			S2C_Round arg0 = (S2C_Round)ToLua.CheckObject<S2C_Round>(L, 2);
			obj.NewRound(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BattleEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			S2C_BattleSettle arg0 = (S2C_BattleSettle)ToLua.CheckObject<S2C_BattleSettle>(L, 2);
			obj.BattleEnd(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateStaticBuff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			System.Collections.Generic.Dictionary<byte,int> arg0 = (System.Collections.Generic.Dictionary<byte,int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<byte,int>));
			obj.UpdateStaticBuff(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateActionBuff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			System.Collections.Generic.Dictionary<byte,int> arg0 = (System.Collections.Generic.Dictionary<byte,int>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<byte,int>));
			System.Collections.Generic.Dictionary<int,float> arg1 = (System.Collections.Generic.Dictionary<int,float>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.Dictionary<int,float>));
			obj.UpdateActionBuff(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllBuffs(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			Battler arg0 = (Battler)ToLua.CheckObject<Battler>(L, 2);
			buff[] o = obj.GetAllBuffs(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBattlerPosToUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleMgr obj = (BattleMgr)ToLua.CheckObject<BattleMgr>(L, 1);
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector2 o = obj.GetBattlerPosToUI(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_time(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleMgr obj = (BattleMgr)o;
			float ret = obj.time;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index time on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isTiming(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleMgr obj = (BattleMgr)o;
			bool ret = obj.isTiming;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isTiming on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_time(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleMgr obj = (BattleMgr)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.time = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index time on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isTiming(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleMgr obj = (BattleMgr)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isTiming = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isTiming on a nil value");
		}
	}
}

