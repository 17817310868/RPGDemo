//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class C2S_BattleReplyWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(C2S_BattleReply), typeof(System.Object));
		L.RegFunction("New", _CreateC2S_BattleReply);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("playerId", get_playerId, set_playerId);
		L.RegVar("reply", get_reply, set_reply);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateC2S_BattleReply(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				C2S_BattleReply obj = new C2S_BattleReply(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: C2S_BattleReply.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_playerId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			C2S_BattleReply obj = (C2S_BattleReply)o;
			string ret = obj.playerId;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playerId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_reply(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			C2S_BattleReply obj = (C2S_BattleReply)o;
			bool ret = obj.reply;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reply on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_playerId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			C2S_BattleReply obj = (C2S_BattleReply)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.playerId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playerId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_reply(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			C2S_BattleReply obj = (C2S_BattleReply)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.reply = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reply on a nil value");
		}
	}
}

