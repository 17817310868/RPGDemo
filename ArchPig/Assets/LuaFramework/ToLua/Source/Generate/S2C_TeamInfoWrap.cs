//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class S2C_TeamInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(S2C_TeamInfo), typeof(System.Object));
		L.RegFunction("New", _CreateS2C_TeamInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("playersGuid", get_playersGuid, set_playersGuid);
		L.RegVar("isLeader", get_isLeader, set_isLeader);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateS2C_TeamInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 1, typeof(System.Collections.Generic.List<string>));
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				S2C_TeamInfo obj = new S2C_TeamInfo(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: S2C_TeamInfo.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_playersGuid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_TeamInfo obj = (S2C_TeamInfo)o;
			System.Collections.Generic.List<string> ret = obj.playersGuid;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playersGuid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isLeader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_TeamInfo obj = (S2C_TeamInfo)o;
			bool ret = obj.isLeader;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isLeader on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_playersGuid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_TeamInfo obj = (S2C_TeamInfo)o;
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			obj.playersGuid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playersGuid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isLeader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_TeamInfo obj = (S2C_TeamInfo)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isLeader = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isLeader on a nil value");
		}
	}
}

