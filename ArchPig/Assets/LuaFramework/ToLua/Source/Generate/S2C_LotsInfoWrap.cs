//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class S2C_LotsInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(S2C_LotsInfo), typeof(System.Object));
		L.RegFunction("New", _CreateS2C_LotsInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Guid", get_Guid, set_Guid);
		L.RegVar("itemInfo", get_itemInfo, set_itemInfo);
		L.RegVar("equipInfo", get_equipInfo, set_equipInfo);
		L.RegVar("auctionPrice", get_auctionPrice, set_auctionPrice);
		L.RegVar("bidderGuid", get_bidderGuid, set_bidderGuid);
		L.RegVar("bidderName", get_bidderName, set_bidderName);
		L.RegVar("fixedPrice", get_fixedPrice, set_fixedPrice);
		L.RegVar("remainTime", get_remainTime, set_remainTime);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateS2C_LotsInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				S2C_LotsInfo obj = new S2C_LotsInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: S2C_LotsInfo.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Guid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			string ret = obj.Guid;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Guid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			S2C_AddItemInfo ret = obj.itemInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_equipInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			S2C_AddEquipInfo ret = obj.equipInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index equipInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_auctionPrice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			int ret = obj.auctionPrice;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index auctionPrice on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bidderGuid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			string ret = obj.bidderGuid;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bidderGuid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bidderName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			string ret = obj.bidderName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bidderName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fixedPrice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			int ret = obj.fixedPrice;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixedPrice on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_remainTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			int ret = obj.remainTime;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index remainTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Guid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Guid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Guid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_itemInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			S2C_AddItemInfo arg0 = (S2C_AddItemInfo)ToLua.CheckObject<S2C_AddItemInfo>(L, 2);
			obj.itemInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_equipInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			S2C_AddEquipInfo arg0 = (S2C_AddEquipInfo)ToLua.CheckObject<S2C_AddEquipInfo>(L, 2);
			obj.equipInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index equipInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_auctionPrice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.auctionPrice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index auctionPrice on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bidderGuid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.bidderGuid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bidderGuid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bidderName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.bidderName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bidderName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fixedPrice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.fixedPrice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixedPrice on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_remainTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_LotsInfo obj = (S2C_LotsInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.remainTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index remainTime on a nil value");
		}
	}
}

