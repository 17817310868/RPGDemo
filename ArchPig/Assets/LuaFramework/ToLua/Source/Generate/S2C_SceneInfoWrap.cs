//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class S2C_SceneInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(S2C_SceneInfo), typeof(System.Object));
		L.RegFunction("New", _CreateS2C_SceneInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("sceneId", get_sceneId, set_sceneId);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateS2C_SceneInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				S2C_SceneInfo obj = new S2C_SceneInfo(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: S2C_SceneInfo.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sceneId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_SceneInfo obj = (S2C_SceneInfo)o;
			string ret = obj.sceneId;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sceneId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sceneId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			S2C_SceneInfo obj = (S2C_SceneInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.sceneId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sceneId on a nil value");
		}
	}
}

